class Solution:
    """
    @param nums: An integer array
    @return: The length of LIS (longest increasing subsequence)
    """
    def longestIncreasingSubsequence(self, nums):
        # write your code here
        if (len(nums)==0 or len(nums)==1):
            return 0
        res=[nums[0]]
        for i in range(1,len(nums)):
            if nums[i]>res[-1]:
                res.append(nums[i])
            else:
                left=0
                right=len(res)-1
                if left==right:
                    res[0]=nums[i]
                else:
                    while(left<right):
                        mid=left+(right-left)//2
                        if res[mid]>nums[i]:
                            right=mid
                        else:
                            left=mid+1
                    res[right]=nums[i]
        return len(res)
                                        
            
